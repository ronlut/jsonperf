name: Deploy

on:
  push:
    branches:
      - master
jobs:
  pre-ci:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: 'Block Concurrent Executions'
        uses: softprops/turnstyle@v1
        with:
          same-branch-only: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  changes:
    runs-on: ubuntu-latest
    # Set job outputs to values from filter step
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
      general: ${{ steps.filter.outputs.general }}
    steps:
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2.2.1
        id: filter
        with:
          filters: |
            general: 
              - '.github/**/*'
            backend:
              - 'serverless.yml'
              - 'test_jsons/**/*'
              - 'python/**/*'
            frontend:
              - 'frontend/**/*'
  gh-pages:
    name: Deploying to Github Pages
    needs: [pre-ci, changes]
    if: ${{ needs.changes.outputs.frontend == 'true' || needs.changes.outputs.general == 'true' }}
    defaults:
      run:
        working-directory: frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: 14

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Run deploy script
        run: |
          .github/deploy.sh
  backend:
    name: Deploying backend
    needs: changes
    if: ${{ needs.changes.outputs.backend == 'true' || needs.changes.outputs.general == 'true' }}
    defaults:
      run:
        working-directory: ${{ matrix.setup.dir }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        setup:
          - language: node
            version: 14
            dir: .
            sls_file: serverless.yml
          - language: python
            version: 3.8
            dir: python
            sls_file: serverless_py3.yml
          - language: python
            version: 2.7
            dir: python
            sls_file: serverless_py2.yml
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        if: matrix.setup.language == 'node'
        with:
          node-version: "${{ matrix.setup.version }}"

      - uses: actions/setup-python@v2
        if: matrix.setup.language == 'python'
        with:
          python-version: "${{ matrix.setup.version }}"

      - name: install serverless and dependencies
        run: yarn add serverless && yarn install

      - name: Deploy
        run: npx serverless deploy --config ${{ matrix.setup.sls_file }}
        env:
          SLS_DEBUG: 1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}